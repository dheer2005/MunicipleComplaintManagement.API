// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MunicipleComplaintMgmtSys.API.ComplaintContext;

#nullable disable

namespace MunicipleComplaintMgmtSys.API.Migrations
{
    [DbContext(typeof(ComplaintDBContext))]
    [Migration("20250910061057_updateComplaintAndAttachment")]
    partial class updateComplaintAndAttachment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.AuditLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionResult")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DefaultSlaHours")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Complaint", b =>
                {
                    b.Property<Guid>("ComplaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AssignedWorkerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<Guid>("CitizenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("SlaDueAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ComplaintId");

                    b.HasIndex("AssignedWorkerId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("TicketNo")
                        .IsUnique();

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.ComplaintAttachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttachmentId"));

                    b.Property<int>("AttachmentType")
                        .HasColumnType("int");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UploadedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AttachmentId");

                    b.HasIndex("ComplaintId");

                    b.HasIndex("UploadedByUserId");

                    b.ToTable("ComplaintAttachments");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.ComplaintComment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CommentId");

                    b.HasIndex("ComplaintId");

                    b.HasIndex("UserId");

                    b.ToTable("ComplaintComments");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.ComplaintStatusHistory", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NewStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryId");

                    b.HasIndex("ChangedByUserId");

                    b.HasIndex("ComplaintId");

                    b.ToTable("ComplaintStatusHistories");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("DepartmentName")
                        .IsUnique();

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<Guid>("CitizenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSatisfied")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("ComplaintId")
                        .IsUnique();

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RelatedComplaintId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationId");

                    b.HasIndex("RelatedComplaintId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("SlaHours")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Worker", b =>
                {
                    b.Property<Guid>("WorkerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("WorkerId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.AuditLog", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Category", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Department", "Department")
                        .WithMany("Categories")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Complaint", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Worker", "AssignedWorker")
                        .WithMany("AssignedComplaints")
                        .HasForeignKey("AssignedWorkerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Category", "Category")
                        .WithMany("Complaints")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "Citizen")
                        .WithMany("Complaints")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Department", "Department")
                        .WithMany("Complaints")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.SubCategory", "SubCategory")
                        .WithMany("Complaints")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AssignedWorker");

                    b.Navigation("Category");

                    b.Navigation("Citizen");

                    b.Navigation("Department");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.ComplaintAttachment", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Complaint", "Complaint")
                        .WithMany("Attachments")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "UploadedByUser")
                        .WithMany()
                        .HasForeignKey("UploadedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Complaint");

                    b.Navigation("UploadedByUser");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.ComplaintComment", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Complaint", "Complaint")
                        .WithMany("Comments")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complaint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.ComplaintStatusHistory", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "ChangedByUser")
                        .WithMany("StatusHistories")
                        .HasForeignKey("ChangedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Complaint", "Complaint")
                        .WithMany("StatusHistory")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChangedByUser");

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Feedback", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "Citizen")
                        .WithMany()
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Complaint", "Complaint")
                        .WithOne("Feedback")
                        .HasForeignKey("MunicipleComplaintMgmtSys.API.Models.Feedback", "ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizen");

                    b.Navigation("Complaint");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Notification", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Complaint", "RelatedComplaint")
                        .WithMany()
                        .HasForeignKey("RelatedComplaintId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RelatedComplaint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.SubCategory", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Worker", b =>
                {
                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.Department", "Department")
                        .WithMany("Workers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MunicipleComplaintMgmtSys.API.Models.User", "User")
                        .WithOne("WorkerProfile")
                        .HasForeignKey("MunicipleComplaintMgmtSys.API.Models.Worker", "WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Category", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Complaint", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("Feedback");

                    b.Navigation("StatusHistory");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Department", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Complaints");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.SubCategory", b =>
                {
                    b.Navigation("Complaints");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Complaints");

                    b.Navigation("Notifications");

                    b.Navigation("StatusHistories");

                    b.Navigation("WorkerProfile");
                });

            modelBuilder.Entity("MunicipleComplaintMgmtSys.API.Models.Worker", b =>
                {
                    b.Navigation("AssignedComplaints");
                });
#pragma warning restore 612, 618
        }
    }
}
